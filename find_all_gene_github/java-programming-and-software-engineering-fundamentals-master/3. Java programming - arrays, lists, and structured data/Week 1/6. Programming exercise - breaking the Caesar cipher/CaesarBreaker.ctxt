#BlueJ class context
comment0.params=s
comment0.target=int\ countLetters(java.lang.String)
comment0.text=\n\ Creates\ an\ array\ of\ letter\ frequencies\ in\ parameter\ String\ s\ \n\ and\ returns\ the\ index\ of\ the\ largest\ letter\ frequency.\n
comment1.params=values
comment1.target=int\ maxIndex(int[])
comment1.text=\n\ Calculates\ the\ index\ of\ the\ largest\ letter\ frequency\ from\ an\ array\ of\ all\ letter\ frequencies.\n\ @parameter\ freqs\ is\ an\ array\ containing\ letter\ frequencies,\ each\ index\ representing\ \n\ the\ corresponding\ index\ in\ the\ alphabet\ (e.g.\ 0\ represents\ the\ 0th\ letter,\ a)\n\ @returns\ the\ index\ as\ an\ int\n
comment2.params=s
comment2.target=int\ getKey(java.lang.String)
comment2.text=\n\ Returns\ the\ key\ to\ later\ decrypt\ parameter\ String\ s\ after\ calculating\ \n\ the\ shift\ between\ the\ most\ common\ letter\ in\ s,\ assumed\ to\ be\ E,\ and\ E.\n
comment3.params=message\ start
comment3.target=java.lang.String\ halfOfString(java.lang.String,\ int)
comment3.text=\n\ Returns\ a\ new\ String\ that\ is\ every\ other\ character\ from\ message\ \n\ starting\ with\ the\ start\ position.\n
comment4.params=
comment4.target=void\ testHalfOfString()
comment5.params=encrypted\ key
comment5.target=void\ decrypt(java.lang.String,\ int)
comment5.text=\n\ Creates\ a\ CaesarCipher\ object\ in\ order\ to\ encrypt\ encrypted\ string.\ \n\ @parameter\ encrypted\ is\ a\ String\ representing\ the\ encrypted\ message\ to\ encrypt\n
comment6.params=
comment6.target=void\ testDecrypt()
comment7.params=encrypted
comment7.target=java.lang.String\ decryptTwoKeys(java.lang.String)
comment7.text=\n\ Attempts\ to\ determine\ the\ two\ keys\ used\ to\ encrypt\ the\ message,\ prints\ the\ two\ keys,\ \n\ and\ then\ returns\ the\ decrypted\ String\ with\ those\ two\ keys.\n\ @parameter\ encrypted\ is\ a\ String\ representing\ the\ encrypted\ message\n
comment8.params=
comment8.target=void\ testDecryptTwoKeys()
numComments=9
