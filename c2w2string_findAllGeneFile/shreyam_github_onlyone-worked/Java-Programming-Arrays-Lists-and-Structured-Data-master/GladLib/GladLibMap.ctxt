#BlueJ class context
comment0.params=source
comment0.target=GladLibMap(java.lang.String)
comment0.text=\n\ Constructor\ for\ setting\ path\ to\ the\ files\ and\ initializing\ data\ \n\ structures\ for\ storing\ the\ information.\n
comment1.params=fname
comment1.target=void\ putList(java.lang.String)
comment1.text=\n\ Helper\ function\ for\ putting\ lists\ to\ HashMap\ with\ filename\ being\ key\n
comment10.params=
comment10.target=int\ totalWordsInMap()
comment10.text=\n\ This\ method\ returns\ the\ total\ number\ of\ words\ in\ all\ the\ ArrayLists\ \n\ in\ the\ HashMap.\ \n\ @return\ttotal\ number\ of\ words\ that\ were\ possible\ to\ pick\ from\n
comment11.params=
comment11.target=int\ totalWordsConsidered()
comment11.text=\n\ This\ method\ returns\ the\ total\ number\ of\ words\ in\ the\ ArrayLists\ of\ the\ \n\ categories\ that\ were\ used\ for\ a\ particular\ GladLib.\n\ @return\ttotal\ number\ of\ words\ in\ categories\ that\ were\ used\ in\ GladLib\n
comment12.params=args
comment12.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ initializeFromSource()
comment2.text=\n\ Replaces\ all\ the\ words\ from\ files\ with\ putList\ method.\n
comment3.params=key
comment3.target=java.lang.String\ randomFrom(java.lang.String)
comment3.text=\n\ Return\ random\ element\ from\ list\ identified\ by\ key.\n\ @param\ key\ identifying\ map\ item\ from\ which\ to\ get\ random\ \n\ replacement\ word.\ Keeps\ track\ of\ words\ already\ used\ and\ replaced\ words\n\ count.\n\ @return\trandom\ word\ from\ source\n
comment4.params=label
comment4.target=java.lang.String\ getSubstitute(java.lang.String)
comment4.text=\n\ Return\ replacement\ of\ label\ in\ a\ template.\n\ @param\ label\tlabel\ to\ be\ replaced\ by\ random\ word\n\ @return\trandom,\ unique\ word\ for\ given\ label.\ Return\ "UNKNOWN"\ if\n\ no\ such\ label\ is\ found\n
comment5.params=w
comment5.target=java.lang.String\ processWord(java.lang.String)
comment5.text=\n\ Read\ words\ from\ template\ and\ replace\ labels\ with\ appropriate\ replacement\n\ words\n\ @param\ w\tword\ read\ from\ template\n\ @return\tinput\ word\ or\ replacement\ word\n
comment6.params=s\ lineWidth
comment6.target=void\ printOut(java.lang.String,\ int)
comment6.text=\n\ Print\ the\ String\ to\ console\ with\ line\ breaks\ at\ specified\ character\n\ @param\ s\n\ @param\ lineWidth\n
comment7.params=source
comment7.target=java.lang.String\ fromTemplate(java.lang.String)
comment7.text=\n\ Read\ template\ and\ replace\ labels\ with\ random\ replacement\ words.\n\ @return\ttemplate\ file\ with\ all\ labels\ replaced\ with\ random\ words\n
comment8.params=source
comment8.target=java.util.ArrayList\ readIt(java.lang.String)
comment8.text=\n\ Helper\ function\ for\ reading\ files\ into\ lists\n\ @param\ \tsource\tname\ of\ file\ to\ be\ read\n\ @return\tlist\ of\ words\ from\ file\ in\ form\ of\ new\ list\n
comment9.params=
comment9.target=void\ makeStory()
numComments=13
