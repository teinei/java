/**
 * The following codes concentrating on parsing CSV file with Java and extracting the requested information.
 * @author (Tianjia Chen)
 */

import edu.duke.*;
import org.apache.commons.csv.*;

public class quiz1 {

/**
 * Write a method named countryInfo that has two parameters, 
 * parser is a CSVParser and country is a String. 
 * This method returns a string of information about the country or returns “NOT FOUND” 
 * if there is no information about the country. 
 * The format of the string returned is the country, followed by “: “, 
 * followed by a list of the countries’ exports, followed by “: “, followed by the countries export value. 
 */
 
 public void countryInfo(CSVParser parser, String str) {
        int exist = 0;
        for (CSVRecord record: parser ) {
            if (record.get("Country").equals(str)) {
                System.out.println(record.get("Country") + ": "+ record.get("Exports") + ": " + record.get("Value (dollars)"));
                exist = 1;
            }
            
        }
        if (exist == 0) System.out.println("Not Found!");
        
    }
    
    public void testcountryInfo() {
        FileResource fr = new FileResource();
        CSVParser parser = fr.getCSVParser();
        listExporterProduct(parser, "cotton");
    }

/**
 * Write a void method named listExportersTwoProducts that has three parameters, parser is a CSVParser, 
 * exportItem1 is a String and exportItem2 is a String. 
 * This method prints the names of all the countries that have both exportItem1 and exportItem2 as export items. 
 */
 
 public void listExporterTwoProducts(CSVParser parser, String exportitem1, String exportitem2) {
        for (CSVRecord record: parser ) {
            String str = record.get("Exports");
            if (str.contains(exportitem1) && str.contains(exportitem2)) {
                System.out.println(record.get("Country"));
            }
        }
    }
    
    public void testlistExporterTwoProducts() {
        FileResource fr = new FileResource();
        CSVParser parser = fr.getCSVParser();
        listExporterTwoProducts(parser, "cotton", "flowers");
    }
    

/**
 * Write a method named numberOfExporters, which has two parameters, parser is a CSVParser, 
 * and exportItem is a String. 
 * This method returns the number of countries that export exportItem.
 */
 
 public int listExporterProduct(CSVParser parser, String exportitem1) {
        int number = 0;
        for (CSVRecord record: parser ) {
            String str = record.get("Exports");

            if (str.contains(exportitem1)) {
                System.out.println(record.get("Country"));
                number = number + 1;
            }
        }
        return number;
        
    }
    
    public void testlistExporterProduct() {
        FileResource fr = new FileResource();
        CSVParser parser = fr.getCSVParser();
        int number = listExporterProduct(parser, "cocoa");
        System.out.println(number);
    }
    

/**
 * Write a void method named bigExporters that has two parameters, parser is a CSVParser, 
 * and amount is a String in the format of a dollar sign, 
 * followed by an integer number with a comma separator every three digits from the right. 
 * An example of such a string might be “$400,000,000”. 
 * This method prints the names of countries and their Value amount for all countries whose Value (dollars) string is longer than the amount string. 
 */
 
 public void bigExporters(CSVParser parser, String amount) {
        for (CSVRecord record: parser ) {
            String str = record.get("Value (dollars)");
            if (str.length() > amount.length()) {
                System.out.print(record.get("Country")+" ");
                System.out.println(str);
            }
        }
    }
    
    public void testbigExporters() {
        FileResource fr = new FileResource();
        CSVParser parser = fr.getCSVParser();
        bigExporters(parser, "$999,999,999,999");
    }
    
  }
 
 
